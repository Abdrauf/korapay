{
  "stats": {
    "suites": 6,
    "tests": 6,
    "passes": 4,
    "pending": 0,
    "failures": 2,
    "start": "2021-05-03T20:28:56.213Z",
    "end": "2021-05-03T20:41:42.792Z",
    "duration": 227436,
    "testsRegistered": 6,
    "passPercent": 66.66666666666667,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1e74282f-c29e-4a39-a8fe-d5f52f5ccfcd",
      "title": "",
      "fullFile": "cypress/integration/Login.feature",
      "file": "cypress/integration/Login.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "76822129-de7c-4751-ba79-2c13044e5f57",
          "title": "Authentication",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A User should be able Login",
              "fullTitle": "Authentication A User should be able Login",
              "timedOut": null,
              "duration": 31430,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ec2417f7-0a1a-4566-8eeb-11ce8fd2ef39",
              "parentUUID": "76822129-de7c-4751-ba79-2c13044e5f57",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ec2417f7-0a1a-4566-8eeb-11ce8fd2ef39"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 31430,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a9dd1b69-b44f-4665-8e7a-c297e3cb57ce",
      "title": "",
      "fullFile": "cypress/integration/LogOut.feature",
      "file": "cypress/integration/LogOut.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1f8b6325-c71e-46a1-aad2-73fc5755e06d",
          "title": "Log Out",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "User must have logged in successfully",
              "fullTitle": "Log Out User must have logged in successfully",
              "timedOut": null,
              "duration": 39386,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e5627728-79f7-4448-a1cd-ffe6753e7074",
              "parentUUID": "1f8b6325-c71e-46a1-aad2-73fc5755e06d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e5627728-79f7-4448-a1cd-ffe6753e7074"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 39386,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "628de3b5-9387-40bd-991a-f999b30c49cc",
      "title": "",
      "fullFile": "cypress/integration/SignUp.feature",
      "file": "cypress/integration/SignUp.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b3ddd7ab-e09c-42e0-986f-3726234e47ad",
          "title": "Sign Up",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "I want to be able to sign Up",
              "fullTitle": "Sign Up I want to be able to sign Up",
              "timedOut": null,
              "duration": 43599,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.h1`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.h1`, but never found it.\n    at Function.assertDashboard (https://alphapay.netlify.app/__cypress/tests?p=cypress\\integration\\SignUp.feature:73:26)\n    at Context.eval (https://alphapay.netlify.app/__cypress/tests?p=cypress\\integration\\SignUp.feature:139:26)\n    at Context.resolveAndRunStepDefinition (https://alphapay.netlify.app/__cypress/tests?p=cypress\\integration\\SignUp.feature:10567:9)\n    at Context.eval (https://alphapay.netlify.app/__cypress/tests?p=cypress\\integration\\SignUp.feature:9910:35)",
                "diff": null
              },
              "uuid": "8d95fa6d-7099-4fdb-82cc-bfb70c7fb1f6",
              "parentUUID": "b3ddd7ab-e09c-42e0-986f-3726234e47ad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8d95fa6d-7099-4fdb-82cc-bfb70c7fb1f6"
          ],
          "pending": [],
          "skipped": [],
          "duration": 43599,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "84f53bb3-1b2c-4987-a2db-2b5f376f0791",
      "title": "",
      "fullFile": "cypress/integration/SignUpWithWrongDetails.feature",
      "file": "cypress/integration/SignUpWithWrongDetails.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5f0d8a3b-b109-4ca9-9aba-2bef6c74f23f",
          "title": "Sign Up With Wrong Details",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "I want to be able to sign Up with wrong details",
              "fullTitle": "Sign Up With Wrong Details I want to be able to sign Up with wrong details",
              "timedOut": null,
              "duration": 32942,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d3c2890a-80db-46a0-b0df-429a7797acf2",
              "parentUUID": "5f0d8a3b-b109-4ca9-9aba-2bef6c74f23f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d3c2890a-80db-46a0-b0df-429a7797acf2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 32942,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "79925546-3a5a-44aa-8224-24c2993976ca",
      "title": "",
      "fullFile": "cypress/integration/UpdateProfile.feature",
      "file": "cypress/integration/UpdateProfile.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e439fef4-8afb-4835-9dc8-3a31be2c3540",
          "title": "Update Profile",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "User must have logged in successfully",
              "fullTitle": "Update Profile User must have logged in successfully",
              "timedOut": null,
              "duration": 38150,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b68414ee-cee1-48f8-a96c-437d223d3b47",
              "parentUUID": "e439fef4-8afb-4835-9dc8-3a31be2c3540",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b68414ee-cee1-48f8-a96c-437d223d3b47"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 38150,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "bd559c9e-44b8-49ec-8741-243ab2ccd0cf",
      "title": "",
      "fullFile": "cypress/integration/ChangePassword.feature",
      "file": "cypress/integration/ChangePassword.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a4c55ce5-b5b7-44a5-8da5-107a18b7541b",
          "title": "Change Password",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "User must have logged in successfully",
              "fullTitle": "Change Password User must have logged in successfully",
              "timedOut": null,
              "duration": 41929,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "CypressError: Timed out retrying after 4000ms: `cy.type()` failed because this element:\n\n`<input name=\"password\" type=\"password\" placeholder=\"Old Password\" value=\"\">`\n\nis being covered by another element:\n\n`<div class=\"dashboard_nav\">...</div>`\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with",
                "estack": "CypressError: Timed out retrying after 4000ms: `cy.type()` failed because this element:\n\n`<input name=\"password\" type=\"password\" placeholder=\"Old Password\" value=\"\">`\n\nis being covered by another element:\n\n`<div class=\"dashboard_nav\">...</div>`\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with\n    at $Cy.ensureDescendents (https://alphapay.netlify.app/__cypress/runner/cypress_runner.js:141821:26)\n    at ensureDescendents (https://alphapay.netlify.app/__cypress/runner/cypress_runner.js:130140:8)\n    at ensureDescendentsAndScroll (https://alphapay.netlify.app/__cypress/runner/cypress_runner.js:130147:14)\n    at ensureElIsNotCovered (https://alphapay.netlify.app/__cypress/runner/cypress_runner.js:130281:5)\n    at runAllChecks (https://alphapay.netlify.app/__cypress/runner/cypress_runner.js:130468:52)\n    at retryActionability (https://alphapay.netlify.app/__cypress/runner/cypress_runner.js:130491:16)\n    at tryCatcher (https://alphapay.netlify.app/__cypress/runner/cypress_runner.js:10747:23)\n    at Function.Promise.attempt.Promise.try (https://alphapay.netlify.app/__cypress/runner/cypress_runner.js:8021:29)\n    at tryFn (https://alphapay.netlify.app/__cypress/runner/cypress_runner.js:146270:21)\n    at whenStable (https://alphapay.netlify.app/__cypress/runner/cypress_runner.js:146308:12)\n    at https://alphapay.netlify.app/__cypress/runner/cypress_runner.js:145803:16\n    at tryCatcher (https://alphapay.netlify.app/__cypress/runner/cypress_runner.js:10747:23)\n    at Promise._settlePromiseFromHandler (https://alphapay.netlify.app/__cypress/runner/cypress_runner.js:8682:31)\n    at Promise._settlePromise (https://alphapay.netlify.app/__cypress/runner/cypress_runner.js:8739:18)\n    at Promise._settlePromise0 (https://alphapay.netlify.app/__cypress/runner/cypress_runner.js:8784:10)\n    at Promise._settlePromises (https://alphapay.netlify.app/__cypress/runner/cypress_runner.js:8864:18)\nFrom Your Spec Code:\n    at Function.enterOldPassword (https://alphapay.netlify.app/__cypress/tests?p=cypress\\integration\\ChangePassword.feature:123:27)\n    at Context.eval (https://alphapay.netlify.app/__cypress/tests?p=cypress\\integration\\ChangePassword.feature:68:34)\n    at Context.resolveAndRunStepDefinition (https://alphapay.netlify.app/__cypress/tests?p=cypress\\integration\\ChangePassword.feature:10643:9)\n    at Context.eval (https://alphapay.netlify.app/__cypress/tests?p=cypress\\integration\\ChangePassword.feature:9986:35)",
                "diff": null
              },
              "uuid": "0efc3c3d-c15b-4b4e-a7f5-231f34c8f317",
              "parentUUID": "a4c55ce5-b5b7-44a5-8da5-107a18b7541b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "0efc3c3d-c15b-4b4e-a7f5-231f34c8f317"
          ],
          "pending": [],
          "skipped": [],
          "duration": 41929,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}